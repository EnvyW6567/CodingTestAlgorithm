from collections import defaultdict
import sys

sys.setrecursionlimit(10000)
sales = {}


def dfs(seller, graph, money):
    if seller == "-":
        return -1
    money //= 10
    if money == 0:
        return -1
    sales[seller] = int(sales[seller]) - money
    sales[graph[seller]] += money
    dfs(graph[seller], graph, money)


def solution(enroll, referral, seller, amount):
    graph = {}
    answer = []
    # 다단계 그래프
    sales['-'] = 0
    graph
    for i in range(len(enroll)):
        graph[enroll[i]] = referral[i]
        sales[enroll[i]] = 0

    # 영업 내역
    for i in range(len(seller)):
        sales[seller[i]] += amount[i]*100

    for i in range(len(seller)):
        dfs(seller[i], graph, amount[i]*100)
    for i in range(len(enroll)):
        answer.append(sales[enroll[i]])
    return answer


enroll = ["john", "mary", "edward", "sam", "emily", "jaimie", "tod", "young"]
referral = ["-", "-", "mary", "edward", "mary", "mary", "jaimie", "edward"]
seller = ["young", "john", "tod", "emily", "mary"]
amount = [12, 4, 2, 5, 10]

solution(enroll, referral, seller, amount)
